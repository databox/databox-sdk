#!/usr/bin/env ruby

task :default => 'all'
task :clean => ["js:clean", "ruby:clean", "python:clean", "php:clean"]
task :all => [:ruby, :python, :js, :php]

# JavaScript
task :js => ["js:install", "js:unittest", "js:exampletest"] do
  puts "JavaScript: Passed."
end
task :ruby => ["ruby:install", "ruby:unittest", "ruby:exampletest"] do
  puts "Ruby: Passed."
end
task :python => ["python:install", "python:unittest", "python:exampletest"] do
  puts "Python: Passed."
end
task :php => ["php:install", "php:unittest", "php:exampletest"] do
  puts "PHP: Passed."
end

# not yet fully functional
# task :java => ["java:install", "java:unittest"] do
#   puts "Java: Passed."
# end

namespace :ruby do
  task :install do
    unless Dir.exists?('databox-js')
      sh "git clone git://github.com/databox/databox-ruby.git databox-ruby"
      Dir.chdir('./databox-ruby') do
        sh "rvm use `cat .ruby-version`@`cat .ruby-gemset` --create"
        sh "gem install bundler"
        sh "bundle install"
      end
    end
  end

  task :clean do
    sh "rm -rf ./databox-ruby"
  end

  task :unittest do
    Dir.chdir('./databox-ruby') do
      sh "bundle exec rspec"
    end
  end

  task :exampletest do
    Dir.chdir("./databox-ruby") do
      sh "ruby -v"
      sh "ruby ./example.rb"
    end
  end
end

namespace :python do
  task :install do
    unless Dir.exists?('databox-python')
      sh "git clone git://github.com/databox/databox-python.git databox-python"
      Dir.chdir('./databox-python') do
        sh "pip install --upgrade -r requirements.txt"
        sh "python setup.py install"
      end
    end
  end

  task :unittest do
    Dir.chdir("./databox-python") do
      sh "python -munittest discover -p -t . 'test*' -v"
    end
  end

  task :exampletest do
    Dir.chdir("./databox-python") do
      sh "python -V"
      sh "python ./example.py"
    end
  end

  task :clean do
    sh "rm -rf ./databox-python"
  end
end

namespace :js do
  task :install do
    unless Dir.exists?('databox-js')
      sh "git clone git://github.com/databox/databox-js.git databox-js"
      Dir.chdir('./databox-js') do
        sh "npm install"
      end
    end
  end

  task :unittest do
    Dir.chdir("./databox-js") do
      sh "npm test"
    end
  end

  task :exampletest do
    Dir.chdir('./databox-js') do
      sh "node -v"
      sh "node ./example.js"
    end
  end

  task :clean do
    sh "rm -rf ./databox-js"
  end
end

namespace :php do
  task :install do
    unless Dir.exists?('databox-php')
      sh "git clone git://github.com/databox/databox-php.git databox-php"
      Dir.chdir('./databox-php') do
        sh "curl -s http://getcomposer.org/installer | php"
        sh "php composer.phar install --prefer-source"
      end
    end
  end

  task :unittest do
    Dir.chdir("./databox-php") do
      sh "./vendor/bin/phpunit -v --debug --color"
    end
  end

  task :exampletest do
    Dir.chdir("./databox-php") do
      sh "php ./example.php"
    end
  end

  task :clean do
    sh "rm -rf ./databox-php"
  end
end

namespace :java do
  task :install do
    unless Dir.exists?('databox-java')
      sh "git clone git://github.com/databox/databox-java.git databox-java"
      Dir.chdir('./databox-java') do
        sh "mvn install"
      end
    end
  end

  task :unittest do
    Dir.chdir("./databox-java") do
      sh "mvn test"
    end
  end

  task :clean do
    sh "rm -rf ./databox-java"
  end
end
